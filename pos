#E value < e-41

genomes = ['0001', '0005', '0007', '0008', '0009', '0010', '0011',
    '0014', '0015', '0016', '0017', '0018', '0019', '0020', '0021',
    '0022', '0024', '0029', '0035', '0036', '0037', '0038', '0039',
    '0040', '0041', '0042', '0043', '0044']

# position identified by is finder
# full length = 820bp
pos_IS26 = {
    '0001': ((35928, 36746, -), (39229, 40048, +), (151907, 152726, -)),
    '0005': ((114568, 115387, +), (118914, 119733, +), (125526, 126345, -)),
    '0007': ((156624, 157443, -), (31272, 32091, +), (44315, 45134, +), (136266, 137085, +),
        (43071, 43890, -), (38573, 39392, -), (145083, 145902, +), (33104, 33923, -), (149429, 150248, +)),
    '0008': ((5389, 6208, +), (4347, 5166, +), (1, 820, -)),
    '0009': ((362, 1181, +), (12947, 13766, +),(11703, 12522, -), (6540, 7359, -), (2194, 3013, -)),
    '0010': ((20337, 21156, +), (141275, 142094, -), (19093, 19912, -)),
    '0011': ((12304, 13123, +), (19277, 20096, +), (1460, 2279, -)),
    '0014': ((117640, 118459, -), (110574, 111393, +), (112434, 113253, +)),
    '0015': ((4517, 5336, +), (19042, 19861, +), (150016, 150835, -), (25598, 26417, -), (23738, 24557, -),
        (179365, 180184, +), (165323, 166142, +)),
    '0016': ((157299, 158118, -), (20336, 21155, +), (19093, 19912, -), (127230, 128049, -), (113483,114302, +)),
    '0017': ((22025, 22844, +), (131331, 132150, -), (20781, 21600, -)),
    '0018': ((25181, 26000, +), (23937, 24756, -), (18568, 19387, -)),
    '0019': ((20337, 21156, +), (126141, 126959, -), (19093, 19912, -)),
    '0020': ((20337, 21156, +), (125881, 126700, -), (19094, 19913, -)),
    '0021': ((20337, 21156, +), (123015, 123834, -), (19093, 19912, -)),
    '0022': ((25979, 26798, +), (24731, 25550, -)),
    '0024': ((17257, 18076, -),),
    '0029': ((30894, 31713, +), (47198, 48017, +), (52553, 53372, +), (59526, 60345, +), (45954, 46773, -),
        (41608, 42427, -), (39389, 40208, -), (32726, 33545, -)),
    '0035': ((19220, 20039, +), (137161, 137980, +), (13976, 18795, -)),
    '0036': ((176068, 176887, -), (160010, 160829, +), (163663, 164482, +), (167558, 168377, +), (60970, 61789, -),
        (211083, 211906, +), (219904, 220723, +), (32816, 33635, -)),
    '0037': ((22056, 22875, +), (87666, 88485, -), (20812, 21631, -), (100736, 101555, -)),
    '0038': ((21996, 22815, +), (100678, 101497, -), (20752, 21571, -), (87605, 88427, -)),
    '0039': ((1, 820, +), (53526, 54345, +), (147857, 148643, -)),
    '0040': ((143281, 144100, +), (45916, 46734, -)),
    '0041': ((223747, 224566, -), (207689, 208508, +), (211342, 212161, +), (215237, 216056, +), (60970, 61789, -),
        (258766, 259585, +), (267583, 268402, +), (32816, 33635, -)),
    '0042': ((176079, 176898), (160021, 160840), (163674, 164493), (211098, 211917), (219915, 220734),
        (32816, 33635)),
    '0043': ((49405, 50224), (36081, 36900), (40427, 41246)),
    '0044': ((20337, 21156), (106856, 107675), (19093, 19912), (108718, 109537), (113663, 114482)),
}

# full length = 767bp
pos_IS26_truncated = {
    '0010': (( 142095, 142861, -)),
    '0011': ((7011, 7768, +),),
    '0015': ((10282, 11044, +),),
    '0017': ((132151, 132917, -),),
    '0020': ((126701, 127467, -),),
    '0021': ((123835, 124601, -),),
}

# full length = 380bp
pos_IS26_small = {
    '0007': ((30894, 31271, +),),
    '0009': ((18, 378, +),),
}

# full length = 100bp
pos_IS26_tiny = {
    '0038': ((101711, 101810, -),),
}

# full length = 6455bp
# Tn3 contains TnAs2, ISSwil, ISShesll
pos_Tn3g = {
    '0001': ((36747, 38392, -), (128542, 130721, -), (154731, 155847, -), (152990, 153972, -),
        (154013, 154365, -), (131462, 131813, -), (128355, 128491, -), (130805, 131067, -)),
    '0005': ((123748, 125522, -),),
    ‘0007': ((156076, 156390), (157444, 160602, +), (126477, 127651, +), (128144, 128359, +),
        (128442, 129164, +), (129185, 130197, +), (130274, 130780, +)),
    '0010': ((121282, 123461, -), (147105, 148221, -), (143072, 143957, -), (145364, 146346, -),
        (144008, 144607, -), (146387, 146739, -), (124202, 124553, -), (121095, 121231, -), (123545, 123807, -)),
    '0011': ((112261, 117210, +),),
    '0014': ((107786, 107922, -), (107973, 110152, -), (136822, 137834, -), (139481, 139993, -), (137855, 138577, -),
        (139995, 140473, -), (136239, 136745, -)),
    '0015': ((26839, 29018, +), (162013, 163025, +), (159854, 160366, +), (161270, 161992, +), (159359, 159837, +),
        (163102, 163608, +), (29069, 29226, +), (26493, 26755, +)),
    '0016': ((109596, 111775, -), (112516, 112867, -), (109409, 109545, -), (111859, 112121, -)),
    '0017': ((111338, 113517, -), (137161, 138277, -), (133128, 134013, -), (135420, 136402, -), (134064, 134663, -),
        (136443, 136795, -), (114258, 114609, -), (111151, 111287, -), (113601, 113863, -)),
    '0019': ((109638, 111817, -), (131203, 132319, -), (127170, 128055, -), (129462, 130444, -), (128106, 128705, -),
        (130485, 130837, -), (112558, 112909, -), (109451, 109587, -), (111901, 112163, -)),
    '0020': ((105889, 108068, -), (131711, 132827, -), (127678, 128563, -), (129970, 130952, -), (128614, 129213, -),
        (130993, 131345, -), (108809, 109160, -), (105702, 105838, -), (108152, 108414, -)),
    '0021': ((121282, 122957, -), (128845, 129961, -), (124812, 125697, -), (127104, 128086, -), (125748, 126347, -),
        (128127, 128479, -), (121095, 121231, -)),
    '0022': ((126927, 129106, -), (145197, 146358, -), (142651, 143663, -), (143684, 144406, -), (129847, 130198, -),
        (144489, 144704, -), (142068, 142574, -), (126740, 126876, -), (129190, 129452, -)),
    '0024': ((97694, 99873, -), (121358, 122519, -), (118812, 119824, -), (119845, 120567, -), (100614, 100965, -),
        (120650, 120865, -), (118229, 118735, -), (97507, 97643, -), (99957, 100219, -)),
    '0029': ((152517, 157467, +),),
    '0035': ((125347, 128932, -), (108511, 108903, -), (111447, 111792, -), (108965, 109194, -), (143880, 146897, -),
        (147031, 147463, -)),
    '0036': ((152265, 154444, -), (236846, 237858, -), (239505, 240017, -), (237879, 238601, -), (240019, 240497, -),
        (155185, 155536, -), (236263, 236769, -), (152057, 152214, -), (154528, 154790, -)),
    '0037': ((91640, 96589, +), (105799, 106915, -), (101766, 102651, -), (104058, 105040, -), (90783, 91625, -), 
        (102702, 103301, -), (105081, 105433, -), (90200, 90706, -)),
    '0038': ((91582, 96531, +), (106054, 107170, -), (102021, 102906, -), (104313, 105295, -), (90725, 91567, -),
        (102957, 103556, -), (105336, 105688, -), (90142, 90648, -)),
    '0039': ((149886, 153471, -), (58982, 59374, +), (160094, 160250, -), (56093, 56438, +), (58691, 58920, +),
        (57185, 59364, +), (48166, 49282, +), (48166, 49282, +), (52430, 53315, +), (50041, 51023, +), (51780, 52379, +),
        (150091, 150458, -), (150533, 151034, -), (49648, 50000, +), (153010, 153458, -), (56093, 56444, +), (59415, 59551, +),
        (56839, 57101, +)),
    '0040': ((139820, 141999, -), (169415, 170576, -), (166869, 167881, -), (167902, 168624, -), (142740, 143091, -),
        (168707, 168922, -), (166286, 166792, -), (139633, 139769, -), (142083, 142345, -)),
    '0041': ((199944, 202123, -), (284525, 285537, -), (287184, 287696, -), (285558, 286280, -), (287698, 288176, -),
        (202864, 203215, -), (283942, 284448, -), (199736, 199893, -), (202207, 202469, -), (216057, 216879, -)),
}

# full length = 1656bp
pos_IS1380g = {
    '0001': ((77855, 79510, +),),
    '0005': ((11295, 12950, -), (137909, 139564, +)),
    '0010': ((70595, 72250, +), (58963, 60107, +), (70079, 70594, -)),
    # 0010 中的 (58963, 60107, +), (70079, 70594, -) 刚好拼接成1个IS1380，但是反向，中间插入 10k 序列
    '0014': ((142861, 143941, +), (145479, 146064, +)),
    # 0014 中的 2个片段刚好组成1个IS1380，中间插入1500bp
    '0015': ((58909, 60564, +),),
    '0016': ((58912, 60564, +),),
    '0017': ((60651, 62306, +),),
    '0019': ((58961, 60606, +),),
    '0020': ((55201, 56857, +),),
    '0021': ((70078, 71733, -), (58963, 60107, +), (71734, 72249, +)),
    # 0021 中的 (58963, 60107, +), (71734, 72249, +) 刚好拼接成1个IS1380, 中间插入 11k 序列
    '0022': ((76237, 77893, +), (64605, 65749, +), (75721, 76235, -)),
    # 0022 中的 (64605, 65749, +), (75721, 76235, -) 刚好拼接成1个IS1380，但是反向，中间插入 10k 序列
    '0035': ((57844, 59499, +),),
    '0037': ((71799, 73454, -), (60683, 61827, +), (83942, 85086, -), (73455, 73970, +)),
    # 0037 中的 (60683, 61827, +), (83942, 85086, -), (73455, 73970, +) 拼接成1个IS1380
    '0038': ((71740, 73393, -), (83881, 85025, -), (60623, 61768, +), (73394, 73909, +)),
    # 0038 中的 (83881, 85025, -), (60623, 61768, +), (73394, 73909, +)) 拼接成1个IS1380
    '0039': ((108396, 110051, -),),
    '0040': ((89133, 90788, +),),
}

# full length = 1327bp
# 5708, 5075
pos_IS110g = {
    '0001': ((144621, 145947, -), (127029, 128355, -), (155920, 157246, +)),
    '0005': ((122422, 123748, -), (113251, 114567, -)),
    '0010': ((119769, 121095, -), (148294, 149620, +)),
    '0014': ((106460, 107786, -),),
    '0015': ((176175, 177548, +),),
    '0016': ((108083, 109409, -),),
    '0017': ((109825, 111151, -), (138350, 139676, +)),
    '0019': ((108125, 109451, -), (132392, 133718, +)),
    '0020': ((104376, 105702, -), (132900, 134226, +)),
    '0021': ((119769, 121095, -), (130034, 131360, +)),
    '0022': ((125413, 126740, -), (146358, 147685, +)),
    '0024': ((96181, 97507, -), (122519, 123845, +)),
    '0035': ((107008, 108334, -), (168822, 170148, +), (142551, 143877, -)),
    '0036': ((209708, 211070, -),),
    '0037': ((106988, 108314, +),),
    '0038': ((107243, 108569, +),),
    '0039': ((59551, 60877, +), (46767, 48093, -)),
    '0040': ((138307, 139633, -), (170576, 171902, +)),
    '0041': ((257387, 258749, -), (157311, 158637, +)),
}

# full length = 977bp
# ISVsa3
pos_IS91g = {
    '0001': ((42327, 43303, +),),
    '0005': ((119734, 120622, +),),
    '0007': ((47413, 48389, +),),
    '0008': ((8487, 9463, +), (10499, 11475, +)),
    # 0008 2 partial IS91g
    '0009': ((16045, 17021, +),),
    '0010': ((23435, 24411, +),),
    '0011': ((22375, 23351, +),),
    '0016': ((23382, 24358, +),),
    '0017': ((25123, 26099, +),),
    '0018': ((28279, 29255, +),),
    '0019': ((23434, 24410, +),),
    '0020': ((23435, 24411, +),),
    '0021': ((23435, 24411, +),),
    '0022': ((29077, 30053, +),),
    '0024': ((21181, 22157, +),),
    '0029': ((62624, 63600, +),),
    '0035': ((22318, 23294, +),),
    '0037': ((25154, 26130, +),),
    '0038': ((25094, 26070, +),),
    '0039': ((144602, 145578, +),),
    '0040': ((49016, 49992, +),),
}

# full length = 880bp
pos_IS6100 = {
    '0001': ((147795, 148674, +),),
    '0015': ((3233, 4112, -),),
    '0035': ((135258, 136137, +),),
    '0036': ((55924, 56803, +), (159071, 159950, +)),
    '0041': ((55924, 56803, +), (206750, 207629, +), (214986, 215238, +)),
}

# full length = 1613bp
# belong to IS3 family, but longer than IS3g
pos_IS1353 = {
    '0007': ((133808, 135421, -),),
    ’0010': ((138340, 139953, +),),
    '0016': ((124297, 125909, +),),
    '0017': ((128396, 130009, +),),
    '0019': ((123206, 124819, +),),
    '0020': ((122946, 124559, +),),
    '0022': ((137427, 139040, +),),
    '0036': ((231622, 233235, +),),
    '0041': ((279301, 280914, +),),
}

# full length = 2470bp
pos_IS1326 = {
    '0007': ((150249, 151792, +), (135422, 136261, +)),
    '0010': ((135896, 138339, -),),
    '0016': ((121853, 124296, -),),
    '0017': ((125952, 128395, -),),
    '0019': ((120762, 123205, -),),
    '0020': ((120502, 122945, -),),
    '0022': ((134983, 137426, -),),
    '0036': ((229178, 231621, -),),
    '0041': ((276857, 279300, -),),
}

# full length = 1534bp
pos_IS4g = {
    '0014': ((143942, 145480, +),),
    '0016': ((132549, 133873, -),),
}

# full length = 1051bp
pos_IS5g = {
    '0014': ((119211, 120261, -), (122028, 123227, -)),
    '0016': ((135526, 136422, -),),
    '0036': ((37808, 39001, -), (204479, 205482, -), (206668, 207671, -)),
    '0041': ((37808, 39001, -), (146495, 147597, +), (169881, 170937, +), (252158, 253161, -), (254347, 255350, -), 
        (173733, 174653, +)),
}

# full length = 1229bp
pos_IS3g = {
    '0014': ((125000, 126228, -),),
    '0015': ((175259, 176174, +),),
    '0016': ((142643, 143924, -),),
    '0036': ((94052, 95384, +),),
    '0040': ((68568, 69850, +),),
    '0041': ((94052, 95384, +), (145069, 146297, +), (230192, 230920, +), (248136, 248620, +)),
}

# full length = 768bp
pos_IS1g = {
    '0015': ((9514, 10281, -),),
    '0040': ((57156, 57943, +),),
    '0041': ((149058, 149823, +), (167546, 168311, -), (249926, 250693, -), (179459, 180218, -), (59788, 60077, +)),
}

# full length =1087bp
pos_IS30g = {
    '0016': ((140635, 141721, -),),
    '0024': ((111541, 112154, -),),
    '0036': ((25588, 26671, -),), # - wrong?
    '0041': ((25588, 26671, +), (30857, 31940, +)),
}

# full length = 1689bp
# belong to IS91 family, but longer than IS91g
pos_IS1294 = {
    '0017': ((6837, 8525, -),),
    '0022': ((8522, 10210, -), (22396, 24083, -), (172254, 173673, +), (1, 270, +)),
    # 0022 (172254, 173673, +), (1, 270)) construct a complete IS1294
    '0035': ((118951, 120120, +),),
    '0037': ((6484, 7654, -), (7707, 7837, -)),
    # 0037 2 partial of IS1294
    '0038': ((6483, 7653, -), (7706, 7836, -)),
    # 0038 2 partial of IS1294
}

# full length = 1430bp
pos_IS256g = {
    '0017': ((122439, 123373, +),),
    '0020': ((116989, 117923, +),),
}

# full length = 1388bp
# belong to IS4 family
pos_ISApu2 = {
    '0024': ((30398, 31786, +),),
    '0036': ((143820, 145208, +),),
    '0041': ((191499, 192887, +),),
}

# full length = 1617bp
pos_IS1182g = {
    '0029': ((34107, 35723, +),),
    '0036': ((173093, 174632, +),),
    '0041': ((220772, 222311, +),),
}

# full length = 2532bp
pos_IS66g = {
    '0035': ((164934, 167465, -),),
}

# full length = 1310
pos_IS629 = {
    '0035': ((193878, 195187, -),),
}

# full length = 2613bp
pos_IS21g = {
    '0036': ((69110, 71722, -),),
    '0041': ((69110, 71722, -),),
}

# full length 768bp
pos_IS1g = {
    '0036': ((202247, 203014, -),),
}

# full length 1329bp
pos_ISVsa5 = {
    '0040': ((155840, 157147, -),),
}

# full length 1196bp
pos_ISKpn26 = {
    '0041': ((146495, 147690, +), (37900, 39001, -)),
}